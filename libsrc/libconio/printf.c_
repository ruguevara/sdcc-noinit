#include "conio.h"
#include <stdarg.h>

static void print_ulong(unsigned long w){
	char  obuf[11];
	char*  o=obuf;
	unsigned long d=1000000000;
	BYTE i;
	BYTE c;

	for(i=0; i<10; i++){
		c=w/d;
		obuf[i]=c+'0';
		w=w-(c*d);
		d=d/10;
	}

	obuf[10]=0;
	
	for(i=0; i<9; i++){
		if(obuf[i]=='0'){
			o++;
		}
		else{
			break;
		}
	}
	print(o);
}

static void print_long(signed long i){
	if(i<0){
		print("-");
		print_ulong(-i);
	}
	else{
		print_ulong(i);
	}
}

static void print_hex(WORD x){
	char  obuf[5];
	char*  o=obuf;
	BYTE i;
	BYTE c;
	for(i=0; i<4; i++){
		c=(x & 0xF000) >> 12;
		if(c>=10){
			obuf[i] = c-10+'a';
		}
		else
		{
			obuf[i] = c+'0';
		}
		x = x << 4;
	}
	obuf[4]=0;
	for(i=0; i<3; i++){
		if(obuf[i]=='0'){
			o++;
		}
		else{
			break;
		}
	}
	print(o);
}

void printf(const char* fmt, ... ){
	const char* s=fmt;
	char out_cb[2]={0,0};
	va_list	va;
	va_start(va, fmt);
	
	while(*s){
		char c=*s;
		if(c!='%'){
			out_cb[0]=c;
			print(out_cb);
		}
		else switch(*(++s)){
			case 0:{
				return;
				break;
			}
			case 's':{
				print(va_arg(va,char*));
				break;
			}
			case 'u':{
				print_ulong(va_arg(va,WORD));
				break;
			}
			case 'l':{
				print_long(va_arg(va,signed long));
				break;
			}
			case 'i':{
				print_long(va_arg(va,int));
				break;
			}
			case 'x':{
				print_hex(va_arg(va,WORD));
				break;
			}
			case 'c':{
				char cc[2]={0,0};
				*cc=va_arg(va,char);
				print(cc);
				break;
			}
		}
	
		s++;
	}
}
