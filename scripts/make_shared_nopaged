#!/bin/bash
# -- Генератор интерфейса для подгружаемых библиотек --
# Библиотеки лежат в НЕПЕРЕКЛЮЧАЕМЫХ страницах !

# Создаёт два файла для экспорта символов:
#
#	crt0shared.asm - начальный файл библиотеки
#	iface_shared.asm - интерфейс, включаемый в основную программу

# Инициализация библиотеки (пример).
# Библиотеки неперемещаемы!
#
#	load "library" CODE ADR
#	"LIBNAME"_onLoadInit( ADR); - настройка внутреннего интерфейса

# $1 - *.h-файл с интерфейсом библиотеки
# $2 - внутреннее имя библиотеки

INFILE="$1" 
LIBNAME="$2"

if [[ $# -lt 2 ]]; then 
	printf \
"Usage:
	Generate reloctation table.
	$0 <interface.h> <libname>
"
	exit 1
fi


EXPORTSYMS=`sdcpp "$INFILE" | grep "(" | tr -d '*' | sed s/\(.*// | sed 's/^.* //'`

# Размер заголовка
HEADERSIZE=16

# Create CRT0shared.asm
CRT0SHARED=crt0shared.asm
echo ";// --- automatic generate: $CRT0SHARED----" > $CRT0SHARED

printf "\
	;// Only for shared library
	; Global config include
	.include /autoconfig.asm/
	;
        .module crt0_$LIBNAME
	;
	.area _CABS (ABS)
	.area _DABS (ABS)
        ; Entry POINT
        .area _CODE

crt0_header:
_"$LIBNAME"_header:
	.dw	0x424C	;//+00 signature LB
	.dw	0x0001	;//+02 Version
	.dw	libName	;//+04 Name of module
	.dw	reloc_t	;//+06 Relocation table
	.dw	0x0000	;//+08 Link couner
	.dw	0x0000	;//+0A reserv0
	.dw	0x0000	;//+0C reserv1
	.dw	0x0000	;//+0E reserv2

        ;// +$HEADERSIZE Init library
;// C-interface
.globl	_"$LIBNAME"_onLoadInit
_"$LIBNAME"_onLoadInit:
	jp	onLoadInit

	;// Export Calls
" >> $CRT0SHARED

OFS=$(( $HEADERSIZE + 3 ))
for i in $EXPORTSYMS; do
	SYM=_"$i"
	printf "	;// +$OFS\n"
	printf "	.globl $SYM\n"
	printf "	jp $SYM\n"
	OFS=$(( $OFS + 3 ))
done >> $CRT0SHARED

printf "
libName:
	.ascii \"$LIBNAME\"
	.db 00

	;//
onLoadInit:
	call	gs_init
	ret

        ; Library
        .area _HOME
        .area _CONST
        .area _DATA
        ;
	.area _INITIALIZED
	;
	.area _GSINIT
gs_init:
	; all run-time initializers
	.area _GSFINAL
	ret
reloc_t:
	;
	.area _HEAP
	.area _HEAP_END
        ;
        .area _BSEG
        .area _BSS
	;
	.area _INITIALIZER

" >> $CRT0SHARED

# Create asm-interface file
IFACE_SHARED=iface_shared

IFACE_SHAREDLIST="$IFACE_SHARED.rel"

echo ";// --- automatic generate: $IFACE_SHARED"".asm ----" > $IFACE_SHARED.asm
printf "\
	;// Only for shared library 
	; Global config include
	.include /autoconfig.asm/

        .module iface_shared_$LIBNAME
        .area _SHARED_LINKS

libNextAdrP:
	.dw libNextAdr
libLoadAdr:
	;// Start adress
	.dw 0000
libPage:
	;// Start Page
	.dw 0000
libFlags:
	;// FLAGS
	;// bit 0 - 0:fixed in RAM 1:paged
	;// bit 1..15 - reserved
	.dw 0000
libName:
	.ascii \"$LIBNAME\"
	.db 00
libNextAdr:

	.area _CODE
	;// Jumper
.globl _$LIBNAME""_hl_jumper
_""$LIBNAME""_hl_jumper:
	ld	bc,(libLoadAdr)
	add	hl,bc
	jp	(hl)

	;// Export Calls
" >> "$IFACE_SHARED.asm"

OFS=$(( $HEADERSIZE + 3 ))
for i in $EXPORTSYMS; do
	{
	SYM=_"$i"
	printf "	;// +$OFS\n"
	printf "	.globl _$LIBNAME""_hl_jumper\n"
	printf "	.globl $SYM\n"
	printf "$SYM:\n"
	printf "	ld 	hl,#$OFS\n"
	printf "	jp	_$LIBNAME""_hl_jumper\n"
	OFS=$(( $OFS + 3 ))
	}> "$IFACE_SHARED-$i.asm"

	IFACE_SHAREDLIST="$IFACE_SHAREDLIST $IFACE_SHARED-$i.rel"
done
echo "$IFACE_SHAREDLIST"
